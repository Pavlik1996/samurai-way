{"version":3,"file":"static/js/944.b541349c.chunk.js","mappings":"+TAqBaA,EAAW,WAEtB,IAAMC,GAAWC,EAAAA,EAAAA,KACXC,GAASC,EAAAA,EAAAA,KAAmC,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,UAEhEI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,SAAU,SAACC,GACP,OAAKA,EAAOC,MAKPD,EAAOE,cAAZ,EACW,CACHA,SAAU,wBANP,CACHD,MAAO,sBAUnBE,cAAe,CACXF,MAAO,GACPC,SAAU,GACVE,YAAY,GAEhBC,SAAU,SAAAL,GACRT,GAASe,EAAAA,EAAAA,IAAMN,EAAOC,MAAOD,EAAOE,SAAUF,EAAOI,gBAI3D,OAAIX,GACK,SAAC,KAAD,CAAUc,GAAI,cAIlB,SAAC,KAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,UACG,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,UACI,iBAAMN,SAAUR,EAAOe,aAAvB,UACI,UAAC,IAAD,YACI,UAAC,IAAD,YACI,uDACA,8CAEJ,UAAC,IAAD,YACI,SAAC,KAAD,QACIC,MAAM,QACNC,OAAO,UACHjB,EAAOkB,cAAc,WAE5BlB,EAAOmB,OAAOf,OAAQ,yBAAMJ,EAAOmB,OAAOf,QAAe,MAC1D,SAAC,KAAD,QACIgB,KAAK,WACLJ,MAAM,WACNC,OAAO,UACHjB,EAAOkB,cAAc,cAE5BlB,EAAOmB,OAAOd,UAAW,yBAAML,EAAOmB,OAAOd,WAAkB,MAChE,SAAC,IAAD,CACIW,MAAO,cACPK,SAAS,SAAC,KAAD,kBACDrB,EAAOkB,cAAc,eADpB,IAELI,QAAStB,EAAOG,OAAOI,iBAG/B,SAAC,IAAD,CAAQa,KAAM,SAAUG,QAAS,YAAaC,MAAO,UAArD","sources":["components/Login/Login.tsx"],"sourcesContent":["import Button from \"@mui/material/Button\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { login, logOut } from \"../../redux/auth-reducer\";\r\nimport { AppStateType, useAppDispatch } from \"../../redux/redux-store\";\r\n\r\nexport type FormDataType = {\r\n  email: string;\r\n  password: string;\r\n  rememberme: boolean;\r\n};\r\n\r\nexport const Logintwo = () => {\r\n\r\n  const dispatch = useAppDispatch()\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\r\n\r\n  const formik = useFormik({\r\n    validate: (values) => {\r\n        if (!values.email) {\r\n            return {\r\n                email: 'Email is required'\r\n            }\r\n        }\r\n        if (!values.password) {\r\n            return {\r\n                password: 'Password is required'\r\n            }\r\n        }\r\n\r\n    },\r\n    initialValues: {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    },\r\n    onSubmit: values => {\r\n      dispatch(login(values.email, values.password, values.rememberMe))\r\n    },\r\n})\r\n\r\nif (isAuth) {\r\n  return <Redirect to={\"/profile\"} />;\r\n}\r\n\r\n  return (\r\n     <Grid container justifyContent=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p> Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"password\")}\r\n                        />\r\n                        {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                                checked={formik.values.rememberMe}\r\n                            />}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n  ) \r\n}\r\n\r\n\r\n"],"names":["Logintwo","dispatch","useAppDispatch","isAuth","useSelector","state","auth","formik","useFormik","validate","values","email","password","initialValues","rememberMe","onSubmit","login","to","container","justifyContent","item","xs","handleSubmit","label","margin","getFieldProps","errors","type","control","checked","variant","color"],"sourceRoot":""}